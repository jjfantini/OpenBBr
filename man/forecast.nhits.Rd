% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{forecast.nhits}
\alias{forecast.nhits}
\title{Performs Nhits forecasting}
\usage{
forecast.nhits(
  data,
  target_column = "close",
  n_predict = 5,
  train_split = 0.85,
  past_covariates,
  forecast_horizon = 5,
  input_chunk_length = 14,
  output_chunk_length = 5,
  num_stacks = 3,
  num_blocks = 1,
  num_layers = 2,
  layer_widths = 512,
  pooling_kernel_sizes,
  n_freq_downsample,
  dropout = 0.1,
  activation = "ReLU",
  max_pool_1d = TRUE,
  batch_size = 32,
  n_epochs = 100,
  learning_rate = 0.001,
  model_save_name = "nhits_model",
  force_reset = TRUE,
  save_checkpoints = TRUE,
  metric = "mape"
)
}
\arguments{
\item{target_column}{(character length 1) Target column to forecast. Defaults to "close".}

\item{n_predict}{(integer length 1) Days to predict. Defaults to 5.}

\item{train_split}{(numeric length 1) Train/val split. Defaults to 0.85.}

\item{forecast_horizon}{(integer length 1) Forecast horizon when performing historical forecasting. Defaults to 5.}

\item{input_chunk_length}{(integer length 1) Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14.}

\item{output_chunk_length}{(integer length 1) The length of the forecast of the model. Defaults to 5.}

\item{num_stacks}{(integer length 1) The number of stacks that make up the whole model.}

\item{num_blocks}{(integer length 1) The number of blocks making up every stack.}

\item{num_layers}{(integer length 1) The number of fully connected layers preceding the final forking layers in each block
of every stack.}

\item{layer_widths}{(integer length 1) Determines the number of neurons that make up each fully connected layer in each
block of every stack. If a list is passed, it must have a length equal to num_stacks
and every entry in that list corresponds to the layer width of the corresponding stack.
If an integer is passed, every stack will have blocks with FC layers of the same width.}

\item{dropout}{(numeric length 1) The dropout probability to be used in fully connected layers.}

\item{activation}{(character length 1) Supported activations: \link{‘ReLU’,’RReLU’, ‘PReLU’, ‘Softplus’, ‘Tanh’, ‘SELU’, ‘LeakyReLU’, ‘Sigmoid’}}

\item{max_pool_1d}{(logical length 1) Use max_pool_1d pooling. False uses AvgPool1d.}

\item{batch_size}{(integer length 1) Number of time series (input and output sequences) used in each training pass. Defaults to 32.}

\item{n_epochs}{(integer length 1) Number of epochs over which to train the model. Defaults to 100.}

\item{learning_rate}{(numeric length 1) Defaults to 1e-3.}

\item{model_save_name}{(character length 1) Name for model. Defaults to "brnn_model".}

\item{force_reset}{(logical length 1) If set to True, any previously-existing model with the same name will be reset (all checkpoints will be
discarded). Defaults to True.}

\item{save_checkpoints}{(logical length 1) Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True.}

\item{metric}{(character length 1) Metric to use for model selection. Defaults to "mape".}
}
\description{
Wrapper for Python function forecast.nhits from OpenBB Terminal SDK
}
\examples{
forecast.nhits(target_column='close', n_predict=5, train_split=0.85, forecast_horizon=5, input_chunk_length=14, output_chunk_length=5, num_stacks=3, num_blocks=1, num_layers=2, layer_widths=512, dropout=0.1, activation='ReLU', max_pool_1d=TRUE, batch_size=32, n_epochs=100, learning_rate=0.001, model_save_name='brnn_model', force_reset=TRUE, save_checkpoints=TRUE)
}
